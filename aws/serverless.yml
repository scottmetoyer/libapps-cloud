service: libapps

provider:
  name: aws
  runtime: nodejs6.10
  region: us-west-1
  environment:
    PROJECTS_TABLE: projects-${opt:stage, self:provider.stage}
    PROJECT_UPDATES_TABLE: project-updates-${opt:stage, self:provider.stage}
    REQUESTS_TABLE: requests-${opt:stage, self:provider.stage}
    COST_CENTERS_TABLE: cost-centers-${opt:stage, self:provider.stage}
    AUTH0_CLIENT_ID: ${file(./secrets.json):AUTH0_CLIENT_ID}
    AUTH0_CLIENT_SECRET: ${file(./secrets.json):AUTH0_CLIENT_SECRET}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["ProjectsDynamoDbTable", "Arn"] }
        - { "Fn::GetAtt": ["ProjectUpdatesDynamoDbTable", "Arn"] }
        - { "Fn::GetAtt": ["RequestsDynamoDbTable", "Arn"] }
        - { "Fn::GetAtt": ["CostCentersDynamoDbTable", "Arn"] }

functions:
  auth:
    handler: auth.handler
    cors: true
  cost-centers:
    handler: cost-centers.handler
    events:
      - http:
          path: /cost-centers
          method: get
          cors: true
          authorizer: auth
      - http:
          path: /cost-centers
          method: post
          cors: true
          authorizer: auth
      - http:
          path: /cost-center/{costCenter}
          method: any
          cors: true
          authorizer: auth
          request:
            parameters:
              paths:
                costCenter: true
  projects:
    handler: projects.handler
    events:
      - http:
          path: /projects
          method: get
          cors: true
          authorizer: auth
      - http:
          path: /projects
          method: post
          cors: true
          authorizer: auth
      - http:
          path: /project/{project}
          method: any
          cors: true
          authorizer: auth
          request:
            parameters:
              paths:
                project: true
  project-updates:
    handler: project-updates.handler
    events:
      - http:
          path: /project/{project}/project-updates
          method: any
          cors: true
          authorizer: auth
          request:
            parameters:
              paths:
                project: true
  request-priority:
    handler: request-priority.handler
    events:
      - http:
          path: /request-priority
          method: put
          cors: true
          authorizer: auth
  requests:
    handler: requests.handler
    events:
      - http:
          path: /requests
          method: get
          cors: true
          authorizer: auth
      - http:
          path: /requests
          method: post
          cors: true
          authorizer: auth
      - http:
          path: /request/{request}
          method: any
          cors: true
          authorizer: auth
          request:
            parameters:
              paths:
                request: true

resources:
  Resources:
    CostCentersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.COST_CENTERS_TABLE}
    ProjectsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.PROJECTS_TABLE}
    ProjectUpdatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.PROJECT_UPDATES_TABLE}
    RequestsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.REQUESTS_TABLE}
    AuthFailureGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    ServerErrorGatewayResponse:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'